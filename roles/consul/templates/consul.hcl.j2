server      = {{ __hs_consul_is_master | string | lower }}
server_name = "{{ hs_consul_node_fqdn }}"
node_name   = "{{ hs_consul_node_name }}"
enable_central_service_config = true
tls {
  defaults {
{% if hs_consul_use_custom_ca %}
    ca_file     = "{{ __hs_consul_ca_certificate }}"
{% else %}
    ca_file     = "{{ hs_consul_ca_certificate }}"
{% endif %}
    cert_file   = "{{ __hs_consul_self_certificate }}"
    key_file    = "{{ __hs_consul_self_private_key }}"
    verify_incoming = false
    verify_outgoing = false
  }
  internal_rpc {
    verify_server_hostname = false
  }
  grpc {
    use_auto_cert = true
  }
}

{% if __hs_consul_is_master %}
bootstrap_expect = {{ hs_consul_bootstrap_expect }}


auto_encrypt = {
  allow_tls = true
}
{% else %}
enable_central_service_config = true
auto_encrypt = {
  tls = true
  dns_san = ["{{ hs_consul_node_fqdn }}"]
  ip_san = ["{{ hs_consul_advertise_addr }}"]
}
enable_local_script_checks = true 
{% endif %}


connect {
  enabled     = true
  ca_provider = "vault"

  ca_config {
    address = "{{ hs_consul_vault_address }}"
    token = "{{ hs_consul_connect_token }}"
    root_pki_path = "{{ hs_consul_connect_root_pki_path }}"
    intermediate_pki_path = "{{ hs_consul_connect_intermediate_pki_path }}"
    leaf_cert_ttl = "72h"
    rotation_period = "2160h"
    intermediate_cert_ttl = "8760h"
    private_key_type = "rsa"
    private_key_bits = 2048
  }
}

datacenter          = "{{ hs_consul_datacenter_name }}"
primary_datacenter  = "{{ hs_consul_datacenter_name }}"

data_dir    = "{{ __hs_consul_data_dir }}"
encrypt     = "{{ __hs_consul_encrypt_key }}"

acl {
  enabled                  = true
  default_policy           = "{{ hs_consul_acl_default_policy }}"
  enable_token_persistence = true

  tokens {
    default = "{{ hs_consul_acl_auto_encrypt_token }}"
  }
}

advertise_addr = "{{ hs_consul_advertise_addr }}"

addresses {
  dns       = "127.0.0.1"
  grpc  = "0.0.0.0"
  https     = "0.0.0.0"
}

retry_join = {{ __hs_consul_master_partners | to_json }}

ui_config {
  enabled = true
}

performance {
  raft_multiplier = 1
}

ports {
  http     = -1
  dns      = 8600
  grpc     = {{ hs_consul_grpc_port }}
#  grpc_tls = {{ hs_consul_grpc_tls_port}}
  https    = {{ hs_consul_api_port }}
}

config_entries {
  bootstrap {
    kind = "proxy-defaults"
    name = "global"

    config {
      protocol = "http"
      envoy_prometheus_bind_addr = "0.0.0.0:9102"
    }

    mesh_gateway = {
      mode = "none"
    }
  }
}

{% if hs_consul_prometheus_enabled %}
telemetry {
  disable_hostname = true
  prometheus_retention_time = "30s"
}
{% endif %}
