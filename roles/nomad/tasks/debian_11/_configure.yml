---
- name: Check directories exist
  file:
    path: "{{ _current_directory }}"
    owner: nomad
    group: nomad
    state: directory
    mode: 0755
  loop: "{{ __hs_nomad_expected_directories }}"
  loop_control:
    loop_var: _current_directory

- name: Common private ssl directory
  file:
    path: "{{ __hs_nomad_tls_dir }}"
    owner: root
    group: "{{ __hs_nomad_ssl_cert_group }}"
    state: directory
    mode: 0750

- name: Add nomad user to ssl-cert group
  user:
    name: nomad
    groups: "{{ __hs_nomad_ssl_cert_group }}"
    append: true

- name: Upload Vault Root CA
  copy:
    dest: "{{ __hs_nomad_vault_root_ca_certificate }}"
    content: |-
      {{ hs_consul_connect_root_pki_certificate_b64 | b64decode }}
    mode: 0644
    owner: root
    group: "{{ __hs_nomad_ssl_cert_group }}"
  notify: Update ca trust

- name: Upload CA certificate
  copy:
    src: "{{ hs_nomad_local_ca_cert }}"
    dest: "{{ __hs_nomad_ca_certificate }}"
    owner: root
    group: "{{ __hs_nomad_ssl_cert_group }}"
    mode: 0644
  notify:
    - Update ca trust
  when: hs_nomad_use_custom_ca

- name: Flush handlers
  meta: flush_handlers

- name: Upload self certificate
  copy:
    src: "{{ _current_cert_part }}"
    dest: "{{ __hs_nomad_tls_dir }}/{{ _current_cert_part.split('/')[-1] }}"
    owner: root
    group: "{{ __hs_nomad_ssl_cert_group }}"
    mode: 0640
  loop:
    - "{{ hs_nomad_node_cert }}"
    - "{{ hs_nomad_node_cert_private_key }}"
    - "{{ hs_nomad_node_cert_fullchain }}"
  loop_control:
    loop_var: _current_cert_part
  notify: Restart nomad

- name: Generate encrypt key
  copy:
    dest: "{{ __hs_nomad_encrypt_key_local_path }}"
    mode: 0600
    content: >
      {{
        lookup('password', __hs_nomad_encrypt_key_local_path +'.gen length=32 chars=ascii_letters,digits,punctuation')
        | b64encode
      }}
  run_once: true
  become: false
  delegate_to: localhost
  no_log: true

- name: Write nomad server environment
  template:
    src: "nomad.env.j2"
    dest: "{{ __hs_nomad_env_file }}"
    owner: nomad
    group: nomad
    mode: 0640
  notify: Restart nomad

- name: Write nomad server configuration
  template:
    src: "nomad.hcl.j2"
    dest: "{{ __hs_nomad_conf_file }}"
    owner: nomad
    group: nomad
    mode: 0640
  notify: Restart nomad

- name: Check that /etc/modules exists
  stat:
    path: /etc/modules
  register: modules_file_stat

- name: Add netfilter to loaded modules
  lineinfile:
    path: /etc/modules
    line: br_netfilter
    create: true
    owner: root
    group: root
    mode: 0644
  when: modules_file_stat.stat.exists
  notify: Reload kernel modules

- name: Flush before continuing
  meta: flush_handlers

- name: Apply sysctl customization
  ansible.posix.sysctl:
    name: "{{ _current_sysctl_option.key }}"
    value: "{{ _current_sysctl_option.value }}"
    state: present
    reload: true
  loop: "{{ hs_nomad_sysctl | dict2items }}"
  loop_control:
    loop_var: _current_sysctl_option

- name: Load network Docker image
  community.docker.docker_image_load:
    path: "/var/cache/pause-amd64-3.1.tar"
  tags:
    - molecule-notest

- name: Load Envoy Docker image
  community.docker.docker_image_load:
    path: "/var/cache/envoy-{{ hs_nomad_connect_image_version }}.tar"
  tags:
    - molecule-notest
