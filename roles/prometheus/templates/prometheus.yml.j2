#jinja2: trim_blocks: True, lstrip_blocks: True
global:
  scrape_interval: 15s
  scrape_timeout: 10s
  evaluation_interval: 15s

scrape_configs:
  {% if prometheus_scrape_configs != [] %}
  {{ prometheus_scrape_configs | to_nice_yaml(indent=2,sort_keys=False) | indent(2,False) }}
  {% else %}
  - job_name: "netdata"
    honor_labels: true
    metrics_path: "/api/v1/allmetrics"
    params:
      format: ["prometheus_all_hosts"]
    consul_sd_configs:
      - server: https://{{ inventory_hostname }}.{{ public_domain }}:8501
        scheme: https
        token: "{{ consul_prometheus_token | default('empty')}}"
        services:
          - netdata
    relabel_configs:
      - source_labels: ['__meta_consul_node']
        action: replace
        target_label: 'instance'

  - job_name: "vault"
    honor_labels: true
    scheme: https
    authorization:
      type: Bearer
      credentials: "{{ hs_telemetry_vault_token }}"
    metrics_path: "/v1/sys/metrics"
    params:
      format: ["prometheus"]
    consul_sd_configs:
      - server: https://{{ inventory_hostname }}.{{ public_domain }}:8501
        scheme: https
        token: "{{ hs_consul_prometheus_token | default('empty') }}"
        services:
          - vault
    tls_config:
      insecure_skip_verify: true
    relabel_configs:
      - source_labels: ['__meta_consul_node']
        action: replace
        target_label: 'instance'
      
  - job_name: "nomad"
    honor_labels: true
    scheme: https
    metrics_path: "/v1/metrics"
    params:
      format: ["prometheus"]
    consul_sd_configs:
      - server: https://{{ inventory_hostname }}.{{ public_domain }}:8501
        scheme: https
        token: "{{ hs_consul_prometheus_token | default('empty') }}"
        services: ['nomad-client', 'nomad']
    relabel_configs:
      - source_labels: ['__meta_consul_node']
        action: replace
        target_label: 'instance'
      - source_labels: ['__meta_consul_tags']
        regex: '(.*)http(.*)'
        action: keep

  - job_name: "consul"
    honor_labels: true
    scheme: https
    metrics_path: "/v1/agent/metrics"
    authorization:
      type: Bearer
      credentials: "{{ hs_consul_telemetry_token }}"
    params:
      format: ["prometheus"]
    consul_sd_configs:
      - server: https://{{ inventory_hostname }}.{{ public_domain }}:8501
        scheme: https
        token: "{{ hs_consul_prometheus_token | default('empty') }}"
        services:
          - consul_api
    relabel_configs:
      - source_labels: ['__meta_consul_node']
        action: replace
        target_label: 'instance'
          
  - job_name: "prometheus"
    honor_labels: true
    params:
      format: ["prometheus"]
    consul_sd_configs:
      - server: https://{{ inventory_hostname }}.{{ public_domain }}:8501
        scheme: https
        token: "{{ hs_consul_prometheus_token | default('empty') }}"
    relabel_configs:
      # Don't scrape the extra -sidecar-proxy services that Consul Connect
      # sets up, otherwise we'll have duplicates.
      - source_labels: [__meta_consul_service]
        action: drop
        regex: (.+)-sidecar-proxy
      # Only scrape services that have a metrics_port meta field.
      # This is optional, you can use other criteria to decide what
      # to scrape.
      - source_labels: [__meta_consul_service_metadata_metrics_port]
        action: keep
        regex: (.+)
      # Replace the port in the address with the one from the metrics_port
      # meta field.
      - source_labels: [__address__, __meta_consul_service_metadata_metrics_port]
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: ${1}:${2}
        target_label: __address__
      - source_labels: ['__meta_consul_node']
        action: replace
        target_label: 'instance'
      - source_labels: ['__meta_consul_service']
        action: replace
        target_label: 'job'
  {% endif %}
