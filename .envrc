#
# Commands dependencies
# =====================
#
DIRENV_CMD_DEPENDENCIES="unzip tar mkdir curl chmod rm"
for mandatory_cmd in ${DIRENV_CMD_DEPENDENCIES}; do
    if [ -z "$(which ${mandatory_cmd})" ]; then
         echo "===> Mandatory command not found: ${mandatory_cmd}"
         exit 1
    fi
done
#
# Direnv configuration
# =====================
#
layout_python3 || echo "Executing out of direnv"
export DIRENV_TMP_DIR="${PWD}/.direnv"
export DIRENV_BIN_DIR="${DIRENV_TMP_DIR}/bin"
if [ ! -e "${DIRENV_BIN_DIR}" ]; then
    mkdir -p "${DIRENV_BIN_DIR}"
fi
export PATH="${DIRENV_BIN_DIR}:${PATH}"
DIRENV_PYTHON_LIBS_DIR_RELATIVE="$(find ${DIRENV_TMP_DIR} -type d -name site-packages)"
export DIRENV_PYTHON_LIBS_DIR="$(realpath ${DIRENV_PYTHON_LIBS_DIR_RELATIVE})"
export PYTHONPATH="${DIRENV_PYTHON_LIBS_DIR}:${PWD}/plugins:${PWD}/docs/plugins"
#
# Ansible configuration
# =====================
#
export ANSIBLE_LIBRARY="${PWD}/plugins/modules:${ANSIBLE_LIBRARY}"
if [ ! -e "${PWD}/.is_container" ]; then
    export ANSIBLE_COLLECTIONS_PATH="${DIRENV_TMP_DIR}"
fi
export ANSIBLE_INVENTORY="inventory"
export ANSIBLE_SSH_ARGS="-F ssh.cfg"
export ANSIBLE_ROLES_PATH="${DIRENV_TMP_DIR}/ansible_roles:${PWD}/roles"
export ANSIBLE_DISPLAY_SKIPPED_HOSTS="True"
# export ANSIBLE_VAULT_PASSWORD_FILE="${PWD}/.env.vault"
export MOLECULE_CONTAINERS_BACKEND="docker"
#
# Fork management for OSX
#
export OBJC_DISABLE_INITIALIZE_FORK_SAFETY=YES
#
# Environment configuration
# =========================
#
#
ENV_ADDONS=".env.local .env.secrets .env.secret"
for addon in ${ENV_ADDONS}; do
    if [ -e "${PWD}/${addon}" ]; then
        source ${PWD}/${addon}
    fi
done
#
# Terraform CLI installation
# ==========================
#
if [ ! -e "${PWD}/.is_container" ]; then
  TF_VERSION="1.3.8"
  TF_ARCH="linux_amd64"
  if [[ "$(uname -m)" == "arm64" ]]; then
    TF_ARCH="darwin_arm64"
  elif [[ "$(uname -s)" == "Darwin" ]]; then
    TF_ARCH="darwin_amd64"
  fi
  TF_PKG_NAME="terraform_${TF_VERSION}_${TF_ARCH}.zip"
  TF_PKG_URL="https://releases.hashicorp.com/terraform/${TF_VERSION}/${TF_PKG_NAME}" 
  TF_PKG_PATH="${DIRENV_TMP_DIR}/${TF_PKG_NAME}" 
  if [ ! -e "${DIRENV_BIN_DIR}/terraform" ]; then
      echo "===> Getting terraform:${TF_VERSION}:${TF_ARCH} (can take a while to execute)"
      curl -s -L "${TF_PKG_URL}" -o "${TF_PKG_PATH}"
      unzip ${TF_PKG_PATH} -d ${DIRENV_BIN_DIR}
      chmod 700 ${DIRENV_BIN_DIR}/terraform
      rm -f ${TF_PKG_PATH}
  fi
#
# Terraform CLI configuration
# ==========================
#
  export TF_PLUGIN_CACHE_DIR="${DIRENV_TMP_DIR}/terraform-plugin-cache"
  if [ ! -e "${TF_PLUGIN_CACHE_DIR}" ]; then
      mkdir -p "${TF_PLUGIN_CACHE_DIR}"
  fi
fi


