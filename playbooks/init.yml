---
- name: "Init hashistack management directory"
  hosts: localhost
  become: false
  gather_facts: false

  vars:
    hs_archi: "{{ lookup('env', 'HS_ARCHI') | default('mono', true) }}"
    hs_base_dir: "{{ lookup('env', 'PWD') }}"
    hs_dir_name: "{{ hs_workspace | regex_replace('-','_') }}"
    hs_parent_domain: "{{ lookup('env', 'HS_PARENT_DOMAIN') | default('localdomain', true) }}"
    hs_workspace: "{{ lookup('env', 'HS_WORKSPACE') | default('hashistack', true) }}"

  tasks:
    - name: "Load collection variables"
      import_role:
        name: "common_vars"

    - name: Sanity checks
      assert:
        that:
          - hs_workspace is defined
          - hs_workspace | length > 1
          - hs_parent_domain is defined
          - hs_parent_domain | length > 1

    - name: Variable cooking
      set_fact:
        _output_dir: >-
          {{ (hs_base_dir[0] != '/') | ternary(lookup('env', 'PWD') + '/', '') }}{{ hs_base_dir }}/{{ hs_dir_name }}

    - name: Create directory for inventory
      file:
        path: "{{ _current_dir }}"
        state: directory
        recurse: true
      loop:
        - "{{ _output_dir }}/group_vars/hashistack"
        - "{{ _output_dir }}/group_vars/hashistack/secrets"
        - "{{ _output_dir }}/group_vars/hashistack_sre"
        - "{{ _output_dir }}/host_vars"
        - "{{ _output_dir }}/host_vars/{{ hs_workspace }}-{{ hs_archi }}"
      loop_control:
        loop_var: _current_dir

    - name: Create global variables
      copy:
        dest: "{{ _output_dir }}/group_vars/all.yml"
        mode: 0640
        content: |-
          hs_archi: "{{ hs_archi }}"
          hs_os: "{{ hs_os }}"
          hs_workspace: "{{ hs_workspace }}"
          hs_parent_domain: "{{ hs_parent_domain }}"
          {%- raw %}
          hs_public_domain: >-
            {{ hs_workspace | regex_replace('_', '-') }}.{{ hs_parent_domain }}
          public_domain: "{{ hs_public_domain }}"

          hs_stage0_archi: "{{ hs_archi }}"

          # Atomic configuration variables for scw_one flavor.
          hs_infra_scw_one_instance_type_master: "DEV1-L"
          hs_infra_scw_one_instance_count_master: 3
          hs_infra_scw_one_instance_type_minion: "DEV1-L"
          hs_infra_scw_one_instance_count_minion: 0
          hs_infra_scw_one_instance_image_all: "debian_bookworm"
          # hs_infra_scw_one_instance_image_all: "rockylinux_9"
          {% endraw -%}

    - name: Create inventory files
      copy:
        dest: "{{ _output_dir }}/inventory"
        mode: 0640
        content: |-
          #
          # Inventory for Hashistack instance: {{ hs_workspace }}
          #
          # Playbooks rely on predefined groups hierarchy:
          #
          # _ hashistack
          #   \_ hashistack_sre
          #   \_ hashistack_cluster
          #      \_ hashistack_masters
          #      \_ hashistack_minions
          #
          localhost ansible_connection=local
          #
          # [hashistack:children]
          # hashistack_cluster
          # hashistack_sre
          #
          # [hashistack_cluster:children]
          # hashistack_masters
          # hashistack_minions
          #
          # [hashistack_masters]
          #
          # [hashistack_minions]
          #
          # [hashistack_sre]
          #

    - name: Create ssh.cfg
      copy:
        dest: "{{ _output_dir }}/ssh.cfg"
        mode: 0640
        content: |-
          #
          # SSH configuration for Hashistack instance: {{ hs_workspace }}
          #

    - name: Create instance-local ansible configuration
      copy:
        dest: "{{ _output_dir }}/ansible.cfg"
        mode: 0640
        content: |-
          [defaults]
          stdout_callback = community.general.unixy
          # stdout_callback = ansible.posix.debug
          display_skipped_hosts = false
          display_ok_hosts = false
          # callbacks_enabled = ansible.posix.profile_tasks,ansible.posix.profile_tasks
          deprecation_warnings = false
          forks = 7
          roles_path = roles
          inventory = inventory

          [ssh_connection]
          ssh_args = -F ssh.cfg

